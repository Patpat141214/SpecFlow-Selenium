trigger:
- main  # Replace with your branch name

pool:
  vmImage: 'windows-latest'

steps:
# Step 1: Install the correct .NET SDK version
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'  # Replace with your .NET Core version
    includePreviewVersions: true

# Step 2: Restore NuGet packages
- script: |
    dotnet restore
  displayName: 'Restore Dependencies'

# Step 3: Build the project
- script: |
    dotnet build --configuration Release
  displayName: 'Build Project'

# Step 4: Run SpecFlow tests and generate a .trx file
- script: |
    dotnet test --logger:trx
  displayName: 'Run Tests'

# Step 5: Install SpecFlow.Plus.LivingDoc.CLI
- script: |
    dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
  displayName: 'Install LivingDoc CLI'

# Step 6: Generate the LivingDoc HTML report
- script: |
    echo "Listing files in Shouty.Specs/bin/Debug/net8.0/"
    dir $(Build.SourcesDirectory)/Shouty.Specs/bin/Debug/net8.0/
  displayName: 'Verify DLL Location'

- script: |
    livingdoc test-assembly $(Build.SourcesDirectory)/Shouty.Specs/bin/Debug/net8.0/Shouty.Specs.dll -t $(Build.ArtifactStagingDirectory)/TestResults/$(Build.BuildId).trx
  displayName: 'Generate LivingDoc Report'

# Step 7: Publish the LivingDoc HTML report as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(System.DefaultWorkingDirectory)/LivingDoc.html
    artifactName: LivingDocReport
  displayName: 'Publish LivingDoc Report'